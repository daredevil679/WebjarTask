// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebjarTask.Infrastructure.Persistence;

#nullable disable

namespace WebjarTask.Infrastructure.Migrations
{
    [DbContext(typeof(WebjarProductDbContext))]
    [Migration("20230709114647_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WebjarTask.Domain.Entities.Product.AdditiveM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Additive", "dbo");
                });

            modelBuilder.Entity("WebjarTask.Domain.Entities.Product.FeaturesM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Features", "dbo");
                });

            modelBuilder.Entity("WebjarTask.Domain.Entities.Product.ProductAdditiveM", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("AdditiveId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "AdditiveId");

                    b.HasIndex("AdditiveId");

                    b.ToTable("ProductAdditive", "dbo");
                });

            modelBuilder.Entity("WebjarTask.Domain.Entities.Product.ProductFeaturesM", b =>
                {
                    b.Property<int>("ProductPriceId")
                        .HasColumnType("int");

                    b.Property<int>("FeatureId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("ProductPriceId", "FeatureId");

                    b.HasIndex("FeatureId");

                    b.ToTable("ProductFeatures", "dbo");
                });

            modelBuilder.Entity("WebjarTask.Domain.Entities.Product.ProductM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ImageLink")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Product", "dbo");
                });

            modelBuilder.Entity("WebjarTask.Domain.Entities.Product.ProductPriceM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductPrice", "dbo");
                });

            modelBuilder.Entity("WebjarTask.Domain.Entities.Product.ProductAdditiveM", b =>
                {
                    b.HasOne("WebjarTask.Domain.Entities.Product.AdditiveM", "Additive")
                        .WithMany("ProductAdditives")
                        .HasForeignKey("AdditiveId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("WebjarTask.Domain.Entities.Product.ProductM", "Product")
                        .WithMany("ProductAdditives")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Additive");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WebjarTask.Domain.Entities.Product.ProductFeaturesM", b =>
                {
                    b.HasOne("WebjarTask.Domain.Entities.Product.FeaturesM", "Feature")
                        .WithMany("ProductFeatures")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("WebjarTask.Domain.Entities.Product.ProductPriceM", "ProductPrice")
                        .WithMany("ProductFeatures")
                        .HasForeignKey("ProductPriceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Feature");

                    b.Navigation("ProductPrice");
                });

            modelBuilder.Entity("WebjarTask.Domain.Entities.Product.ProductPriceM", b =>
                {
                    b.HasOne("WebjarTask.Domain.Entities.Product.ProductM", "Product")
                        .WithMany("ProductPrices")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WebjarTask.Domain.Entities.Product.AdditiveM", b =>
                {
                    b.Navigation("ProductAdditives");
                });

            modelBuilder.Entity("WebjarTask.Domain.Entities.Product.FeaturesM", b =>
                {
                    b.Navigation("ProductFeatures");
                });

            modelBuilder.Entity("WebjarTask.Domain.Entities.Product.ProductM", b =>
                {
                    b.Navigation("ProductAdditives");

                    b.Navigation("ProductPrices");
                });

            modelBuilder.Entity("WebjarTask.Domain.Entities.Product.ProductPriceM", b =>
                {
                    b.Navigation("ProductFeatures");
                });
#pragma warning restore 612, 618
        }
    }
}
